---
title: "North American Bat Monitoring Program in Banff National Park"
format:
  html:
    grid:
      margin-width: 300px
title-block-banner: "#1d4566"
title-block-banner-color: "#F4F4F5"
subtitle: "Manual Verification Data Summary" 
navbar: right
theme: cosmo
date: last-modified
author: 
  - name: "Camila Hurtado"
    affiliation: "Biodiversity Pathways Ltd."
editor: visual
bibliography: NABat-NNWHub-references.bib
nocite: '@*'
toc: true
toc-depth: 3
toc-expand: true
toc-location: left
css: styles.css
github: https://github.com/biodiversitypathways/BNP-NABat
---

```{r}
#| label: Load packages and data
#| include: false
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| 
library(tidyr)
library(dplyr)
library(lubridate)
library(stringr)
library(kableExtra)
library(tidyverse)

data <- read.csv("Data/BNP_full.csv")
data$Site <- gsub("\\_.*","",data$IN.FILE)
data$DATE <- as.Date(data$DATE)

```

```{r}
#| label: Get list of sites, transects, unique IDs
#| include: false
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| 
#get a list of all the sites and transects that were carried out
# Create the new dataframe with site names and date ranges
site_dates <- data %>%
  # Filter out any "mobile" sites if needed (as per your previous request)
  subset(Site != "BANFF-MOBILE") %>%
  # Group by site
  group_by(Site) %>%
  # Calculate earliest and latest dates for each site
  summarize(
    earliest_date = min(DATE, na.rm = TRUE),
    latest_date = max(DATE, na.rm = TRUE),
    total_days = as.integer(latest_date - earliest_date) + 1,
  ) %>%
  # Sort by site name
  arrange(Site)

transect_dates <- data %>%
  # Filter out any "mobile" sites if needed (as per your previous request)
  subset(Site == "BANFF-MOBILE") %>%
  # Group by site
  group_by(Site) %>%
  # Calculate earliest and latest dates for each site
  summarize(
    earliest_date = min(DATE, na.rm = TRUE)-1,
    latest_date = max(DATE, na.rm = TRUE)-1,
    total_transects = as.integer(latest_date - earliest_date) + 1,
  ) %>%
  # Sort by site name
  arrange(Site)

# Extract and find unique values in MANUAL.ID
unique_bat_ids <- data %>%
  # Filter out NA or empty values
  filter(!is.na(MANUAL.ID) & MANUAL.ID != "NA" & MANUAL.ID != "") %>%
  # Get just the MANUAL.ID column
  select(MANUAL.ID) %>%
  # Split each entry by comma
  mutate(MANUAL.ID = str_split(MANUAL.ID, ",")) %>%
  # Convert the list column to rows
  unnest(MANUAL.ID) %>%
  # Trim whitespace
  mutate(MANUAL.ID = str_trim(MANUAL.ID)) %>%
  # Get unique values
  distinct() %>%
  # Sort alphabetically
  arrange(MANUAL.ID)

#Add definitions for each manual ID
unique_bat_ids$Definition <- c("Various species of Myotis that have a characteristic frequency in the range of 35-40kHz.", "Calls that have diagnostic features identifying it as Eptesicus fuscus", "Calls that could be attributed to either Eptesicus fuscus or Lasyonicteris noctivagans", "Various species with pulses having a characteristic frequency higher than ~35kHz", "Calls that have diagnostic features identifying it as Lasiurus borealis","Calls that could be attributed to either Lasiurus borealis or Myotis lucifugus","Calls that have diagnostic features identifying it as Lasiurus cinereus", "Calls that have diagnostic features identifying it as Lasyonicteris noctivagans", "Various species with pulses having a characteristic frequency lower than ~30kHz","Calls that have diagnostic features identifying it as Myotis evotis", "Calls that have diagnostic features identifying it as Myotis lucifugus","Calls that could be attributed to either Myotis lucifugus or Myotis septentrionalis", "Calls that could be attributed to either Myotis lucifugus or Myotis volans", "Various species of Myotis with no clear characteristic frequency","Calls that have diagnostic features identifying it as Myotis septentrionalis","Calls that have diagnostic features identifying it as Myotis volans","Bat calls but no grouping category applies", "No bat recorded")

# If you want just a simple character vector
unique_bat_id_vector <- unique_bat_ids$MANUAL.ID

# Count occurrences of each ID
bat_id_counts <- data %>%
  subset(!is.na(MANUAL.ID) & MANUAL.ID != "NA" & MANUAL.ID != "") %>%
  # Create a temporary column with comma-separated values split into rows
  mutate(split_id = str_split(MANUAL.ID, ",")) %>%
  unnest(split_id) %>%
  mutate(split_id = str_trim(split_id)) %>%
  # Count occurrences of each ID
  count(split_id, name = "occurrences") %>%
  arrange(desc(occurrences))

```

```{r}
#| label: summary-table-results
#| include: false
#| echo: false
#| warning: false
#| message: false

result <- data %>% filter(!is.na(MANUAL.ID) & MANUAL.ID != "")
# Split the MANUAL.ID column and create a long format dataframe
result <- result %>%
  mutate(MANUAL.ID = strsplit(as.character(MANUAL.ID), ",")) %>%
  unnest(MANUAL.ID) %>%
  # Trim whitespace from IDs
  mutate(MANUAL.ID = trimws(MANUAL.ID))
  
# Check if we have the unique_bat_ids
# If not, we can create it from the data
if (!exists("unique_bat_ids")) {
  unique_bat_ids <- result %>%
    distinct(MANUAL.ID) %>%
    arrange(MANUAL.ID)
}

# Create a summary table: IDs as rows, sites as columns, counts as values
summary_table <- result %>%
  # Group by ID and Site and count occurrences
  group_by(MANUAL.ID, Site) %>%
  summarise(count = n(), .groups = "drop") %>%
  # Reshape to wide format
  pivot_wider(
    names_from = Site,
    values_from = count,
    values_fill = 0  # Fill NA values with 0
  ) %>%
  # Make sure all IDs from unique_bat_ids are included
  right_join(unique_bat_ids %>% select(MANUAL.ID), by = "MANUAL.ID") %>%
  # Replace NAs with 0s
  mutate(across(where(is.numeric), ~replace_na(., 0)))

# Reorder columns for better readability (ID first, then sites alphabetically)
site_columns <- setdiff(names(summary_table), "MANUAL.ID")
summary_table <- summary_table %>%
  select(MANUAL.ID, sort(site_columns))

# Calculate row totals
summary_table <- summary_table %>%
  mutate(Total = rowSums(select(., -MANUAL.ID)))

# Add a row with column totals (excluding the NOISE row)
col_totals <- colSums(summary_table %>% 
                      filter(MANUAL.ID != "NOISE") %>% 
                      select(-MANUAL.ID))

# Create totals row with exactly matching column names
totals_row <- data.frame(MANUAL.ID = "TOTAL")
for (col_name in names(summary_table %>% select(-MANUAL.ID))) {
  totals_row[[col_name]] <- col_totals[col_name]
}

# Combine the summary table with the totals row
summary_table<- bind_rows(summary_table, totals_row)

# Get the number of rows in the table
n_rows <- nrow(summary_table)

# Format the MANUAL.ID column (bold and italicize all rows)
# We're creating HTML code for each cell
summary_table$MANUAL.ID[1:(n_rows-1)] <- 
  sapply(summary_table$MANUAL.ID[1:(n_rows-1)], 
         function(x) paste0("<b><i>", x, "</i></b>"))

# Using a safer approach to handle column names with hyphens
columns <- names(summary_table)
for(col in columns) {
  # Use the safe bracket notation for column access
  if(col != "MANUAL.ID") { # Skip the MANUAL.ID column as we already formatted it
    summary_table[[col]][n_rows] <- paste0("<b>", summary_table[[col]][n_rows], "</b>")
  } else {
    # Bold the "TOTAL" text
    summary_table[[col]][n_rows] <- paste0("<b>", summary_table[[col]][n_rows], "</b>")
  }
}

# Bold the Total column (last column)
total_col_name <- columns[length(columns)]  # Get the name of the last column
for(i in 1:(n_rows-1)) { # Skip the last row since we already formatted it
  summary_table[[total_col_name]][i] <- 
    paste0("<b>", summary_table[[total_col_name]][i], "</b>")
}


```

# Executive Summary

Banff National Park conducts annual acoustic monitoring of bats as part of the North American Bat Monitoring Program (NABat). In 2024, the monitoring consisted of `` `r length(site_dates$Site)` `` stationary acoustic deployments operating between `` `r site_dates$earliest_date[1]` `` and `` `r site_dates$latest_date[1]` ``, and `` `r transect_dates$total_transects` `` mobile transects conducted on `` `r transect_dates$earliest_date` ``and `` `r transect_dates$latest_date` ``. These data were submitted SENSR for processing and manual vetting. The monitoring focused on seven bat species known to inhabit the region: Big Brown Bats (*Eptesicus fuscus*), Eastern Red Bats (*Lasiurus borealis*), Silver-haired Bats (*Lasionycteris noctivagans*), Hoary Bat (*Lasiurus cinereus*), Little Brown Bats (*Myotis lucifugus*), Long-legged Myotis (*Myotis volans*) and Long-eared Myotis (*Myotis evotis*).

In total stationary detectors operated for a total of `` `r sum(site_dates$total_days)` `` recorder nights and in total collected `` `r length(data$Site[data$Site != "BANFF-MOBILE"])` ``files. Of these, `` `r length(data$Site[data$Site != "BANFF-MOBILE" & data$MANUAL.ID !=""])` `` were manually reviewed and vetted. Mobile transect surveys collected `` `r length(data$Site[data$Site == "BANFF-MOBILE"])` `` files, of which `` `r length(data$Site[data$Site == "BANFF-MOBILE" & data$AUTO.ID != "Noise"])` ``were not identified as noise and were all manually vetted. The species most identified was Little Brown Bats (# of recordings manual verified), followed by \_\_\_\_ (## of recordings identified).

Key recommendations include modifying the mobile transect route to prevent switchbacks, which compromises abundance measurements, and adjusting the Golf Course and Fenlands sites to be 5-10m away from open water to prevent multiple bats in a single recording.

# Land Acknowledgement

Biodiversity Pathways respectfully acknowledges that this work takes place on the territories of Treaties 6, 7, 8, and the Métis homeland, traditional and ancestral lands of First Nations and Métis Peoples, whose histories, languages, and cultures are directly linked to the biodiversity that we monitor.

We acknowledge the traditional teachings of the lands that we work on, and that reciprocal, meaningful, and respectful relationships with Indigenous peoples make our work possible. We are deeply grateful for their stewardship of these lands, and we are committed to supporting Indigenous-led monitoring programs, while learning Indigenous ways of knowing, being, and doing.

# Introduction

## Overview of NABat and the NNW Bat Hub

North American Bat Monitoring Program (NABat) is a large-scale coordinated effort to monitor bat species across North America using standardized protocols and a unified sample design [@loeb2015Plan]. NABat was established to address the gaps in knowledge and lack of long term studies of bat species across Mexico, USA and Canada. The program is administered by the US Geological Survey (USGS), coordinated by the Canadian Wildlife Health Cooperative (CWHC) in Canada, and implemented by the North by Northwest Bat (NNW) Hub in British Columbia, Alberta and S.E Alaska.

NNW Bat Hub was established in 2024 with collaboration from Government of Alberta, Government of Alaska and Government of British Columbia. The hub was formed by combining the previous Alberta Hub and the BC and southeast Alaska (BC-SE_AK) Hub. The implementation of the program within Alberta is lead by Biodiversity Pathways with key support from Parks Canada, government staff, other wildlife biologists, Indigenous Nations, community members and naturalists across the province.

## 2024 NABat Monitoring in Banff National Park

In the field season of 2024, `` `r length(site_dates$Site)` ``separate stationary bat acoustic deployments and `` `r transect_dates$total_transects` `` mobile transects were made in Banff National Park (Figure 1) . The stationary monitoring recorders collected data between `` `r site_dates$earliest_date[1]` `` and `` `r site_dates$latest_date[1]` `` , mobile transects were made on the nights of `` `r transect_dates$earliest_date` ``and `` `r transect_dates$latest_date` `` . The recordings were submitted to SENSR for processing and manual vetting to determine species presence or absence at the sites.

![Figure 1: NABat Survey efforts by Banff National Park in 2024](Figures/2024Sites.jpg){width="2500"}

# Methods

Full-spectrum recordings were from the sampling periods were collected and processed using two automatic classifiers: Kaleidoscope's Bats of North America 5.4.0 classifier and Sonobat 3.0's Northwestern British Columbia classifier. Based on documented species ranges and prior detection data [@olsonBat], manual identification efforts focused on seven species: Big Brown Bats (*Eptesicus fuscus*), Eastern Red Bats (*Lasiurus borealis*), Silver-haired Bats (*Lasionycteris noctivagans*), Hoary Bat (*Lasiurus cinereus*), Little Brown Bats (*Myotis lucifugus*), Long-legged Myotis (*Myotis volans*) and Long-eared Myotis (*Myotis evotis*).

The analysis workflow followed processing standards established by the North American Bat Monitoring Program (NABat) [@reichert2018Guide]. Only recordings assigned a species classification by either Kaleidoscope or Sonobat were selected for manual verification. For stationary acoustic monitoring, recordings were manually vetted until at least one recording per species per site per night was confidently identified. For mobile transects, all recordings with automated species classifications were manually vetted. Species identifications were validated against reference call parameters described by @slough2022New, @solick2022Bat, and @szewczak2018Acoustic, adhering to NABat manual vetting standards [@reichert2018Guide].

# Results

The stationary detectors ran for a total of `` `r sum(site_dates$total_days)` `` recorder nights and in total collected `` `r length(data$Site[data$Site != "BANFF-MOBILE"])` ``files. Of these `` `r length(data$Site[data$Site != "BANFF-MOBILE" & data$AUTO.ID. == "Noise"])` `` were classified as noise files, with no distinguishable bat present. Of the remaining files a total of `` `r length(data$Site[data$Site != "BANFF-MOBILE" & data$MANUAL.ID !=""])` `` were reviewed and manually vetted, following the minimum standards set by NABat to manually verify recordings until at least one recording per species per site per night was confidently identified [@reichert2018Guide]. The manual IDs used are listed and defined in Appendix A.

For driving transects a total of `` `r length(data$Site[data$Site == "BANFF-MOBILE"])` `` files were collected, of which `` `r length(data$Site[(data$Site == "BANFF-MOBILE" & data$AUTO.ID. == "Noise")])` `` were noise files. All files that were not classified as Noise were manually verified for the mobile transects.

```{r}
#| label: summary-table-results-print
#| echo: false
#| warning: false
#| message: false


summary_table %>%
  kbl(caption = "Table 1: Summary of results",
      align = c("l", rep("c", ncol(summary_table)-1)),
      escape = FALSE) %>%
  kable_styling(full_width = FALSE, 
                position = "left", 
                bootstrap_options = c("striped", "hover", "condensed"))
```

# Recommendations

Consider changing the route so that it does not curve into itself. The purpose of abundance measures is sort of defeated when this happens.

Golf course deploy a little a way (5-10m) from the open water and clutter to prevent having multiple bats in a single recording. Upper hotsprings deployments look good. Microphone is close to the detector which creates an echo. Consider getting an extension cable to reduce this

# Appendix A

Definitions for manual identification used while processing Banff National Park bat bioacoustic data

```{r}
#| label: bat-manualID-definitions
#| echo: false
#| warning: false
#| message: false

unique_bat_ids %>%
    kbl( align = c("l", "l"),
        escape = FALSE) %>%
    kable_styling(full_width = FALSE, 
                  position = "left", 
                  bootstrap_options = c("striped", "hover", "condensed"))
```
